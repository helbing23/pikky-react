{"version":3,"sources":["components/SearchPhoto.js","App.js","reportWebVitals.js","index.js"],"names":["SearchPhoto","useState","image","setImage","result","setResult","className","htmlFor","width","height","class","version","viewBox","aria-labelledby","aria-hidden","id","d","onChange","event","target","value","type","name","placeholder","onClick","console","log","url","axios","get","then","response","data","results","map","src","urls","thumb","alt","alt_description","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAIe,SAASA,IAEpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAaA,OACE,qCACE,sBAAKC,UAAU,OAAf,UACE,uBAAOA,UAAU,QAAQC,QAAQ,QAAjC,SACA,sBAAKC,MAAM,KAAKC,OAAO,KAAKC,MAAM,SAASC,QAAQ,MAAMC,QAAQ,YAAYC,kBAAgB,gBAAgBC,cAAY,QAAzH,UAAiI,uBAAOC,GAAG,gBAAV,2BAA+C,sBAAMC,EAAE,sDAExL,uBAAOC,SAlBQ,SAACC,GACtBf,EAASe,EAAMC,OAAOC,QAiBed,UAAU,QAAQe,KAAK,OAAOC,KAAK,QAAQC,YAAY,sBACtF,wBAAQjB,UAAU,SAASkB,QAhBZ,WACrBC,QAAQC,IAAIxB,GACZ,IAAMyB,EAAM,uDAAyDzB,EAAzD,yDAA0F0B,IAAMC,IAAIF,GAAKG,MAAK,SAACC,GAC3HN,QAAQC,IAAIK,GACZ1B,EAAU0B,EAASC,KAAKC,aAYgCZ,KAAK,SAAvD,uBAEF,qBAAKf,UAAU,YAAf,SACGF,EAAO8B,KAAI,SAAChC,GAAD,OACZ,mCACA,qBAAKI,UAAU,OAAf,SACE,qBAAKA,UAAU,cAAc6B,IAAKjC,EAAMkC,KAAKC,MAAOC,IAAKpC,EAAMqC,gBAAiB/B,MAAM,MAClFC,OAAO,oBCrBR+B,MAVf,WACE,OACE,qBAAKlC,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,cAACN,EAAD,UCGOyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.202a01ca.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function SearchPhoto() {\r\n\r\n    const [image, setImage] = useState(\"\");\r\n    const clientId = \"fd4wE1b8ZupiBRU_i-INo4OQGKELTHmdfL5O-6fP4H0\";\r\n    const [result, setResult] = useState([]);\r\n    const handleChange = (event) => {\r\n    setImage(event.target.value);\r\n    };\r\n    const handleSubmit = () => {\r\n    console.log(image);\r\n    const url = \"https://api.unsplash.com/search/photos?page=1&query=\" + image + \"&client_id=\" + clientId;axios.get(url).then((response) => {\r\n    console.log(response);\r\n    setResult(response.data.results);\r\n    });\r\n    };\r\n\r\n\r\n    return (\r\n      <>\r\n        <div className=\"form\"> \r\n          <label className=\"label\" htmlFor=\"query\"> \r\n          <svg width=\"32\" height=\"32\" class=\"_1Jlgk\" version=\"1.1\" viewBox=\"0 0 32 32\" aria-labelledby=\"unsplash-home\" aria-hidden=\"false\"><title id=\"unsplash-home\">Unsplash Home</title><path d=\"M10 9V0h12v9H10zm12 5h10v18H0V14h10v9h12v-9z\"></path></svg>\r\n          </label>\r\n          <input onChange={handleChange} className=\"input\" type=\"text\" name=\"image\" placeholder=\"Search for images\"/>\r\n          <button className=\"button\" onClick={handleSubmit} type=\"submit\">Search</button>\r\n        </div>\r\n        <div className=\"card-list\">\r\n          {result.map((image) => (\r\n          <>\r\n          <div className=\"card\">\r\n            <img className=\"card--image\" src={image.urls.thumb} alt={image.alt_description} width=\"50%\"\r\n                height=\"50%\" />\r\n          </div>\r\n          </>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport SearchPhoto from \"./components/SearchPhoto\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1 className=\"title\">React Photo Search</h1>\n        <SearchPhoto />\n      </div>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}